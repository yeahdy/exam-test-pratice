server:
  port: 8000

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: localhost
    port: 5672
    stream:
      username: adminyj
      password: test12!@
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Global Filter Message
            preLogger: true
            postLogger: true
      routes:
          # user-service
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              ## predicates에 uri 정보를 명시하면 데이터 하나에 대해서만 조건추가 가능
              - Path=/user-service/login
              - Method=POST
            filters:
              ## 로그인 시 매 요청마다 초기화
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/user
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/actuator/**
              - Method=GET,POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}

          # book-catalog-service
          - id: book-catalog-service
            uri: lb://BOOK-CATALOG-SERVICE
            predicates:
              - Path=/book-catalog-service/**

          # order-service
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/actuator/**
              - Method=GET,POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/order-service/(?<segment>.*), /$\{segment}
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/**

          # sample
          - id: first-service
            ## 사용자 요청 시 api gateway에서 predicates가 uri에 붙어서 http://localhost:8081/first-service/** 형태로 전달
            ## localhost:8082 와 같은 port 번호말고 Eureka에 네이밍된 로드밸런스(application의 name)로 포워딩가능
            ## lb 디스커버리 서비스 안에 있는 인스턴스를 찾는 명령어
            uri: lb://MY-FIRST-SERVICE
            predicates: ## 조건절. 사용자가 Path 정보 입력 시 uri로 이동된다.
              - Path=/first-service/**
            filters:
#              - AddRequestHeader=first-request, first-request-header-value
#              - AddResponseHeader=first-response, first-response-header-value
              - CustomFilter

          - id: second-service
            uri: lb://MY-SECOND-SERVICE
            predicates:
              - Path=/second-service/**
            filters:
#              - AddRequestHeader=second-request, second-request-header-value
#              - AddResponseHeader=second-response, second-response-header-value
              ## 추가적인 파라미터를 넣기 위해서는 name: 으로 지정 해 줘야함
              - name: CustomFilter
              - name: LoggingFilter
                args:
                  baseMessage: I'm Logging Filter!
                  preLogger: true
                  postLogger: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

jwt:
  token:
    expiration_time: 86400000
    secret: thesecretkeyvalueofjwtmustbegreaterthan256bits

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, metrics, prometheus